@model List<WEB_Client_Frontend.Models.Employee>

@{
    ViewData["Title"] = "Employee List";
    Layout = "_Layout";
    var totalPages = (int)ViewData["TotalPages"];
    var currentPage = (int)ViewData["CurrentPage"];
}

<h2>@ViewData["Title"]</h2>

<a href="@Url.Action("Create", "Employee")" class="btn btn-primary mb-2">Create New Employee</a>

<input type="text" id="searchBox" placeholder="Search by Name" class="form-control mb-2" />

<table class="table table-bordered table-striped" id="employeeTable">
    <thead>
        <tr>
            <th><input type="checkbox" id="selectAll" /></th>
            <th>Name</th>
            <th>Designation</th>
            <th>Age</th>
            <th>Salary</th>
            <th>Gender</th>
            <th>State</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="employeeTableBody">
        @foreach (var item in Model)
        {
            <tr>
                <td><input type="checkbox" class="selectRecord" data-id="@item.Id" /></td>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Designation)</td>
                <td>@Html.DisplayFor(modelItem => item.Age)</td>
                <td class="salary">@item.Salary</td>
                <td>@Html.DisplayFor(modelItem => item.Gender)</td>
                <td>@Html.DisplayFor(modelItem => item.State)</td>
                <td>
                    <a href="@Url.Action("Edit", "Employee", new { id = item.Id })" class="btn btn-info">Edit</a>
                    <a href="@Url.Action("Delete", "Employee", new { id = item.Id })" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Buttons -->
<div class="d-flex justify-content-between align-items-center">
    <button class="btn btn-danger d-none" id="deleteSelected">Delete Selected</button>
    <div>
        <button class="btn btn-secondary" id="prevPage">Previous</button>
        <button class="btn btn-secondary" id="nextPage">Next</button>
    </div>
</div>

<div class="mt-3">
    <strong>Total Salary: </strong><span id="totalSalary"></span>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {
            let totalPages = parseInt('@ViewData["TotalPages"]');
            let currentPage = parseInt('@ViewData["CurrentPage"]');

            // Pagination buttons
            $('#prevPage').prop('disabled', currentPage <= 1);
            $('#nextPage').prop('disabled', currentPage >= totalPages);

            $('#nextPage').click(function () {
                if (currentPage < totalPages) {
                    window.location.href = '?page=' + (currentPage + 1);
                }
            });

            $('#prevPage').click(function () {
                if (currentPage > 1) {
                    window.location.href = '?page=' + (currentPage - 1);
                }
            });

            // Search filter
            $('#searchBox').on('keyup', function () {
                const value = $(this).val().toLowerCase();
                $('#employeeTableBody tr').filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });
            });

            // Total salary calculation
            let totalSalary = 0;
            $('.salary').each(function () {
                totalSalary += parseFloat($(this).text()) || 0;
            });
            $('#totalSalary').text(totalSalary.toFixed(2));

            // Delete selected toggle
            function toggleDeleteSelectedBtn() {
                const selectedCount = $('.selectRecord:checked').length;
                if (selectedCount > 1) {
                    $('#deleteSelected').removeClass('d-none');
                } else {
                    $('#deleteSelected').addClass('d-none');
                }
            }

            $(document).on('change', '.selectRecord, #selectAll', function () {
                if (this.id === 'selectAll') {
                    $('.selectRecord').prop('checked', this.checked);
                }
                toggleDeleteSelectedBtn();
            });

            // Delete selected action
            $('#deleteSelected').click(function () {
                const ids = $('.selectRecord:checked').map(function () {
                    return $(this).data('id');
                }).get();

                if (ids.length === 0) {
                    alert('No employees selected.');
                    return;
                }

                if (confirm('Are you sure you want to delete selected employees?')) {
                    $.ajax({
                        url: '/Employee/DeleteSelected',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(ids),
                        success: function () {
                            location.reload();
                        }
                    });
                }
            });
        });
    </script>
}
